version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: mgnrega_postgres
    environment:
      POSTGRES_DB: mgnrega_db
      POSTGRES_USER: mgnrega_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mgnrega_user -d mgnrega_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: mgnrega_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mgnrega_backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://mgnrega_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/mgnrega_db
      REDIS_URL: redis://redis:6379
      PORT: 5000
      DATA_GOV_API_KEY: ${DATA_GOV_API_KEY}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./backend/logs:/app/logs

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mgnrega_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
